# Generated by Django 5.1.5 on 2025-01-30 01:17

import autoslug.fields
import cloudinary.models
import django.db.models.deletion
import django_quill.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('devlyfree', '0005_service_created_at_service_updated_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=True, null=True, populate_from='nom')),
                ('meta_title', models.CharField(blank=True, help_text='Title tag pour le SEO - Idéalement entre 50 et 60 caractères', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Meta description pour le SEO - Idéalement entre 150 et 160 caractères', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=True, null=True, populate_from='nom')),
                ('description', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, help_text='Title tag pour le SEO - Idéalement entre 50 et 60 caractères', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Meta description pour le SEO - Idéalement entre 150 et 160 caractères', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=True, null=True, populate_from='nom')),
                ('content', django_quill.fields.QuillField()),
                ('featured_image', cloudinary.models.CloudinaryField(max_length=255)),
                ('featured_image_alt', models.CharField(help_text="Texte alternatif pour l'image principale (SEO)", max_length=100)),
                ('status', models.CharField(choices=[('draft', 'brouillon'), ('published', 'publié')], default='draft', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, help_text='Title tag pour le SEO - Idéalement entre 50 et 60 caractères', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Meta description pour le SEO - Idéalement entre 150 et 160 caractères', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Mots-clés séparés par des virgules', max_length=200)),
                ('canonical_url', models.URLField(blank=True, help_text="URL canonique si différente de l'URL par défaut")),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devlyfree.category')),
                ('tags', models.ManyToManyField(to='devlyfree.tag')),
            ],
        ),
    ]
